{"version":3,"sources":["components/Header.jsx","components/Post.jsx","pages/PostDetails.jsx","pages/AllPosts.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Post","post","this","props","id","title","body","to","Component","PostDetails","posts","match","params","find","item","parseInt","AllPosts","map","App","fetchPosts","a","fetch","response","json","data","setState","state","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sXAiBeA,MAbf,WACE,OACE,iCACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,MAEF,oBAAIA,UAAU,QAAd,wB,gBCYOC,E,4JAlBb,WAEE,IAAQC,EAASC,KAAKC,MAAdF,KACAG,EAAOH,EAAPG,GAGR,OACE,qBAAKL,UAAU,iBAAf,SACI,sBAAKA,UAAU,OAAf,UACE,6BAAKE,EAAKI,QACV,4BAAIJ,EAAKK,OACT,cAAC,IAAD,CAAMP,UAAU,OAAOQ,GAAE,gBAAWH,GAApC,iC,GAZOI,aCgBJC,G,kKAdb,WACE,IAAQC,EAAUR,KAAKC,MAAfO,MACAN,EAAOF,KAAKC,MAAMQ,MAAMC,OAAxBR,GACFH,EAAOS,EAAMG,MAAK,SAACC,GAAD,OAAUA,EAAKV,KAAOW,SAASX,MAEvD,OACE,sBAAKL,UAAU,yBAAf,UACE,cAAC,EAAD,CAAME,KAAMA,IACZ,cAAC,IAAD,CAAMF,UAAU,OAAOQ,GAAG,IAA1B,2B,GATkBC,cCWXQ,G,kKAXb,WACE,IAAQN,EAAUR,KAAKC,MAAfO,MAER,OACE,qBAAKX,UAAU,kBAAf,SACIW,EAAMO,KAAI,SAAChB,GAAD,OAAU,cAAC,EAAD,CAAsBA,KAAMA,GAAhBA,EAAKG,a,GANxBI,c,OCqCRU,G,wDAjCb,aAAe,IAAD,8BACZ,gBAUFC,WAXc,sBAWD,8BAAAC,EAAA,sEACYC,MAAM,8CADlB,cACLC,EADK,gBAEQA,EAASC,OAFjB,OAELC,EAFK,OAGX,EAAKC,SAAS,CAAEf,MAAOc,IAHZ,2CATX,EAAKE,MAAQ,CACXhB,MAAO,IAHG,E,qDAOd,WACER,KAAKiB,e,oBAQP,WAEE,IAAQT,EAAUR,KAAKwB,MAAfhB,MACR,OACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,CAAUnB,MAAQA,OACtD,cAAC,IAAD,CAAOkB,KAAK,YAAYC,OAAQ,SAAC1B,GAAD,OAAW,cAAC,EAAD,2BAAiBA,GAAjB,IAAwBO,MAAQA,oB,GA1BrEF,cCKHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b168bfd0.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/header.css'\nimport { FaRegNewspaper } from 'react-icons/fa'\n\nfunction Header() {\n  return (\n    <header>\n      <div className='header-container'>\n        <div className='logo'>\n          <FaRegNewspaper />\n        </div>\n        <h1 className='title'>News</h1>\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport '../styles/post.css'\nimport { Link } from 'react-router-dom'\n\nclass Post extends Component {\n  render() {\n\n    const { post } = this.props;\n    const { id } = post\n\n\n    return (\n      <div className='post-container'>\n          <div className='post'>\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n            <Link className='link' to={`/post/${id}`}>Saiba mais</Link>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Post;","import React, { Component } from 'react';\nimport Post from '../components/Post';\nimport { Link } from 'react-router-dom'\nimport '../styles/postDetails.css'\n\nclass PostDetails extends Component {\n  render() {\n    const { posts } = this.props;\n    const { id } = this.props.match.params\n    const post = posts.find((item) => item.id === parseInt(id));\n\n    return (\n      <div className='post-container-details'>\n        <Post post={post} />\n        <Link className='link' to='/' >Voltar</Link>\n      </div>\n    )\n  }\n}\n\nexport default PostDetails;","import React, { Component } from 'react';\nimport '../styles/allPosts.css'\nimport Post from '../components/Post';\n\nclass AllPosts extends Component {\n  render() {\n    const { posts } = this.props;\n\n    return (\n      <div className='posts-container'>\n        { posts.map((post) => <Post key={ post.id } post={post} />)}\n      </div>\n    )\n  }\n}\n\nexport default AllPosts;","import Header from './components/Header';\nimport PostDetails from './pages/PostDetails'\nimport AllPosts from './pages/AllPosts'\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n    }\n  }\n\n  componentDidMount() {\n    this.fetchPosts();\n  }\n\n  fetchPosts = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const data = await response.json();\n    this.setState({ posts: data });\n  }\n  render() {\n\n    const { posts } = this.state;\n    return (\n      <div>\n        <Header />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/' render={() => <AllPosts posts={ posts } /> } />\n            <Route path='/post/:id' render={(props) => <PostDetails {...props} posts={ posts } />} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}